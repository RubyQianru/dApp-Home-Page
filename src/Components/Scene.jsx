/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.13 scene.gltf 
Author: Akimovcg (https://sketchfab.com/akimovcg)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/ethereum-3d-logo-de0c154b6f1c46639864a01360dd6aa0
Title: Ethereum 3D logo
*/

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { useFrame } from '@react-three/fiber'
import { LayerMaterial, Depth, Fresnel } from 'lamina'

export function Model(props) {
  const { nodes } = useGLTF('/scene.gltf')

  const ref = useRef()
  const gradient = 0.37

  useFrame((state) => {
    const sin = Math.sin(state.clock.elapsedTime / 2)
    const cos = Math.cos(state.clock.elapsedTime / 2)
    ref.current.layers[0].origin.set(cos / 2, 0, 0)
    ref.current.layers[1].origin.set(cos, sin, cos)
    ref.current.layers[2].origin.set(sin, cos, sin)
    ref.current.layers[3].origin.set(cos, sin, cos)
  })

  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes.Object_2.geometry} rotation={[-Math.PI / 2, 0, 0]}>
      <LayerMaterial ref={ref} toneMapped={false}>
        <Depth colorA="#ff0080" colorB="black" alpha={1} mode="normal" near={0.5 * gradient} far={0.5} origin={[0, 0, 0]} />
        <Depth colorA="blue" colorB="pink" alpha={1} mode="add" near={2 * gradient} far={20} origin={[0, 1, 1]} />
        <Depth colorA="green" colorB="pink" alpha={1} mode="add" near={3 * gradient} far={0} origin={[0, 1, -1]} />
        <Depth colorA="pink" colorB="red" alpha={1} mode="overlay" near={1.5 * gradient} far={25} origin={[1, -1, -1]} />
        <Fresnel mode="add" color="white" intensity={0.7} power={1.5} bias={0.05} />
      </LayerMaterial>
      </mesh>
    </group>
  )
}

useGLTF.preload('/scene.gltf')
