import { MetaMaskSDK, MetaMaskSDKOptions, SDKProvider, ServiceStatus } from '@metamask/sdk';
import { MetaMaskProvider } from '@metamask/sdk-react';
import { EthereumRpcError } from 'eth-rpc-errors';
import React from 'react';
import { Chain, Connector } from 'wagmi';
export declare const SDKContext: React.Context<{
    sdk?: MetaMaskSDK | undefined;
    ready: boolean;
    connected: boolean;
    connecting: boolean;
    provider?: SDKProvider | undefined;
    error?: EthereumRpcError<unknown> | undefined;
    chainId?: string | undefined;
    account?: string | undefined;
    status?: ServiceStatus | undefined;
}>;
export declare const MetaMaskUIProvider: ({ children, connectors, networks, sdkOptions, debug, }: {
    children: React.ReactNode;
    sdkOptions: MetaMaskSDKOptions;
    connectors?: Connector<any, any>[] | undefined;
    networks?: Chain[] | undefined;
    debug?: boolean | undefined;
}) => JSX.Element;
export default MetaMaskProvider;
//# sourceMappingURL=MetaMaskUIProvider.d.ts.map